<?php

namespace TodoBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * EtatTacheRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EtatTacheRepository extends EntityRepository
{

    /**
     * Return the last etat of a tache
     * @param Tache $tache
     * @return int|Etat
     */
    public function getPrevEtat(Tache $tache){

        $etat = $this->createQueryBuilder("etattache")
                ->select("etattache.etat")
                ->where("etattache.id_tache = :id_tache")
                ->orderBy("etattache.id",'DESC')
                ->getFirstResult();

        if(is_null($etat)){
            return $this->getEntityManager()
                    ->getRepository("TodoBundle:Etat")
                    ->findBy(array(
                        "nom"=>"A faire"
                    ));
        }
        return $etat;

    }


    /**
     * todo etatFiltre as array of Etat
     * Return all etat that the task had except etatFiltre
     * @param $tache
     * @param $etatFiltre
     * @return array
     */
    public function getAllEtat_Tache($tache,$etatFiltre = null) {

        $query = $this->createQueryBuilder("etattache")
                        ->select("etattache")
                        ->where("etattache.tache = :tache")
                        ->setParameter("tache",$tache)
                        ->orderBy("etattache.id","DESC")
                        ->setFirstResult(1);

        if($etatFiltre) {
            $query  ->andWhere("etattache.etat <> :etat")
                    ->setParameter("etat",$etatFiltre);
        }

        $results = $query->getQuery()->getResult();

        return $results;

    }

}
